name: "websocket: build/target-tests"

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  build_websocket:
    if: contains(github.event.pull_request.labels.*.name, 'websocket') || github.event_name == 'push'
    name: Build
    strategy:
      matrix:
        idf_ver: ["release-v5.0", "latest"]
        idf_target: ["esp32"]
    runs-on: ubuntu-20.04
    container: espressif/idf:${{ matrix.idf_ver }}
    env:
      TEST_DIR: components/esp_websocket_client/examples
    steps:
      - name: Checkout esp-protocols
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build ${{ matrix.example }} with IDF-${{ matrix.idf_ver }} for ${{ matrix.idf_target }}
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        working-directory: ${{ env.TEST_DIR }}
        run: |
          . ${IDF_PATH}/export.sh
          cat sdkconfig.ci >> sdkconfig.defaults
          idf.py build
      - name: Merge binaries
        working-directory: ${{ env.TEST_DIR }}/build
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          esptool.py --chip ${{ matrix.idf_target }} merge_bin --fill-flash-size 4MB -o flash_image.bin @flash_args
      - uses: actions/upload-artifact@v3
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: |
            ${{ env.TEST_DIR }}/build/bootloader/bootloader.bin
            ${{ env.TEST_DIR }}/build/partition_table/partition-table.bin
            ${{ env.TEST_DIR }}/build/*.bin
            ${{ env.TEST_DIR }}/build/*.elf
            ${{ env.TEST_DIR }}/build/flasher_args.json
            ${{ env.TEST_DIR }}/build/config/sdkconfig.h
            ${{ env.TEST_DIR }}/build/config/sdkconfig.json
          if-no-files-found: error

  run-target-websocket:
    # Skip running on forks since it won't have access to secrets
    if: |
      github.repository == 'espressif/esp-protocols' &&
      ( contains(github.event.pull_request.labels.*.name, 'websocket') || github.event_name == 'push' )
    name: Target test
    needs: build_websocket
    strategy:
      fail-fast: false
      matrix:
        idf_ver: ["release-v5.0", "latest"]
        idf_target: ["esp32"]
    runs-on:
      - self-hosted
      - ESP32-ETHERNET-KIT
    env:
      TEST_DIR: components/esp_websocket_client/examples
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: ${{ env.TEST_DIR }}/build/
      - name: Install Python packages
        env:
          PIP_EXTRA_INDEX_URL: "https://www.piwheels.org/simple"
        run: |
          pip install --only-binary cryptography --extra-index-url https://dl.espressif.com/pypi/ -r $GITHUB_WORKSPACE/ci/requirements.txt
      - name: Download Example Test to target
        run: python -m esptool --chip ${{ matrix.idf_target }} write_flash 0x0 components/esp_websocket_client/examples/build/flash_image.bin
      - name: Run Example Test on target
        working-directory: ${{ env.TEST_DIR }}
        run: |
          python -m pytest --log-cli-level DEBUG --junit-xml=./examples_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}.xml --target=${{ matrix.idf_target }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: examples_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: ${{ env.TEST_DIR }}/*.xml
